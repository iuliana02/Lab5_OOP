#pragma once
#include <vector>
#include "Film.h"


class Repository
{
	friend class Film;

//protected:

public:
	vector<Film> movies;
	vector<Film> watchliste;

	Repository();

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	Adds a film. </summary>
	///
	/// <remarks>	Popai, 23/04/2020. </remarks>
	///
	/// <param name="film">	The film. </param>
	////////////////////////////////////////////////////////////////////////////////////////////////////
	void add_film(Film film);

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	Deletes the film described by film. </summary>
	///
	/// <remarks>	Popai, 23/04/2020. </remarks>
	///
	/// <param name="film">	The film. </param>
	///
	/// <returns>	True if it succeeds, false if it fails. </returns>
	////////////////////////////////////////////////////////////////////////////////////////////////////
	vector<Film> delete_film_watchliste(vector<Film> aux, string titel);

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	Updates the film described by film. </summary>
	///
	/// <remarks>	Popai, 23/04/2020. </remarks>
	///
	/// <param name="film">	The film. </param>
	///
	/// <returns>	True if it succeeds, false if it fails. </returns>
	////////////////////////////////////////////////////////////////////////////////////////////////////
	bool update_film(string titel, string genre, int jahr, int likes, string trailer);

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	Genres. </summary>
	///
	/// <remarks>	Popai, 23/04/2020. </remarks>
	///
	/// <param name="genre">	The genre. </param>
	////////////////////////////////////////////////////////////////////////////////////////////////////
	vector<Film> nach_genre_anzeigen(string genre);

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	Gets the film. </summary>
	///
	/// <remarks>	Popai, 23/04/2020. </remarks>
	///
	/// <returns>	The film. </returns>
	////////////////////////////////////////////////////////////////////////////////////////////////////
	Film get_film(vector<Film> aux, string titel);

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	Zehn eintrage. </summary>
	///
	/// <remarks>	Popai, 24/04/2020. </remarks>
	////////////////////////////////////////////////////////////////////////////////////////////////////
	void zehn_eintrage();

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	Afisare filme. </summary>
	///
	/// <remarks>	Popai, 24/04/2020. </remarks>
	////////////////////////////////////////////////////////////////////////////////////////////////////
	void afisare_filme();

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	Updates the likes. </summary>
	///
	/// <remarks>	Popai, 24/04/2020. </remarks>
	///
	/// <param name="f">		A Film to process. </param>
	/// <param name="likes">	The likes. </param>
	////////////////////////////////////////////////////////////////////////////////////////////////////
	void update_likes(Film f, int likes);

	vector<Film> delete_film_repo(string titel);
};

